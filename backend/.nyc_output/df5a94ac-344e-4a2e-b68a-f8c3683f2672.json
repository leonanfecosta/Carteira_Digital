{"/home/leonancosta/Documentos/Desafio-NG.CASH/backend/src/controllers/user.controller.ts":{"path":"/home/leonancosta/Documentos/Desafio-NG.CASH/backend/src/controllers/user.controller.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":41}},"2":{"start":{"line":6,"column":8},"end":{"line":15,"column":10}},"3":{"start":{"line":7,"column":12},"end":{"line":14,"column":13}},"4":{"start":{"line":8,"column":29},"end":{"line":8,"column":37}},"5":{"start":{"line":9,"column":32},"end":{"line":9,"column":70}},"6":{"start":{"line":10,"column":16},"end":{"line":10,"column":46}},"7":{"start":{"line":13,"column":16},"end":{"line":13,"column":28}},"8":{"start":{"line":16,"column":8},"end":{"line":25,"column":10}},"9":{"start":{"line":17,"column":12},"end":{"line":24,"column":13}},"10":{"start":{"line":18,"column":29},"end":{"line":18,"column":37}},"11":{"start":{"line":19,"column":30},"end":{"line":19,"column":65}},"12":{"start":{"line":20,"column":16},"end":{"line":20,"column":44}},"13":{"start":{"line":23,"column":16},"end":{"line":23,"column":28}},"14":{"start":{"line":26,"column":8},"end":{"line":35,"column":10}},"15":{"start":{"line":27,"column":12},"end":{"line":34,"column":13}},"16":{"start":{"line":28,"column":33},"end":{"line":28,"column":48}},"17":{"start":{"line":29,"column":33},"end":{"line":29,"column":78}},"18":{"start":{"line":30,"column":16},"end":{"line":30,"column":47}},"19":{"start":{"line":33,"column":16},"end":{"line":33,"column":28}},"20":{"start":{"line":38,"column":0},"end":{"line":38,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":30},"end":{"line":36,"column":5}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":24},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":50},"end":{"line":15,"column":9}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":21},"end":{"line":16,"column":22}},"loc":{"start":{"line":16,"column":47},"end":{"line":25,"column":9}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":26,"column":27},"end":{"line":26,"column":28}},"loc":{"start":{"line":26,"column":53},"end":{"line":35,"column":9}},"line":26}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":4,"10":4,"11":4,"12":0,"13":4,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1},"f":{"0":1,"1":0,"2":4,"3":0},"b":{},"inputSourceMap":{"version":3,"file":"/home/leonancosta/Documentos/Desafio-NG.CASH/backend/src/controllers/user.controller.ts","sources":["/home/leonancosta/Documentos/Desafio-NG.CASH/backend/src/controllers/user.controller.ts"],"names":[],"mappings":";;AAIA,MAAqB,cAAc;IACjC,YAAoB,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;QACtC,aAAQ,GAAG,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAC,EAAE;YACzE,IAAI;gBACF,MAAM,IAAI,GAAkB,GAAG,CAAC,IAAI,CAAC;gBACrC,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBACvD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC/B;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,KAAK,CAAC,CAAC;aACb;QACH,CAAC,CAAC;QAEK,UAAK,GAAG,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;YACvE,IAAI;gBACF,MAAM,IAAI,GAAkB,GAAG,CAAC,IAAI,CAAC;gBACrC,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAClD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC7B;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,KAAK,CAAC,CAAC;aACb;QACH,CAAC,CAAA;QAEM,gBAAW,GAAG,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;YAC7E,IAAI;gBACF,MAAM,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;gBAEjC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gBAC/D,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAChC;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,KAAK,CAAC,CAAC;aACb;QACH,CAAC,CAAA;IA9B+C,CAAC;CA+BlD;AAhCD,iCAgCC","sourcesContent":["import { Request, Response, NextFunction } from 'express';\nimport { IRegisterUser } from '../interfaces/user.interface';\nimport UserService from '../services/user.service';\n\nexport default class UserController {\n  constructor(private _userService: UserService) {}\n  public register = async (req: Request, res: Response, next: NextFunction)=> {\n    try {\n      const user: IRegisterUser = req.body;\n      const newUser = await this._userService.register(user);\n      res.status(201).json(newUser);\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public login = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const user: IRegisterUser = req.body;\n      const token = await this._userService.login(user);\n      res.status(200).json(token);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  public getUserInfo = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const username = res.locals.user;\n      \n      const userInfo = await this._userService.getUserInfo(username);\n      res.status(200).json(userInfo);\n    } catch (error) {\n      next(error);\n    }\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c667dc377dd4caa66208024d2be8bbf95e3c12cb"},"/home/leonancosta/Documentos/Desafio-NG.CASH/backend/src/services/user.service.ts":{"path":"/home/leonancosta/Documentos/Desafio-NG.CASH/backend/src/services/user.service.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":12},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":61}},"3":{"start":{"line":5,"column":25},"end":{"line":5,"column":69}},"4":{"start":{"line":6,"column":22},"end":{"line":6,"column":54}},"5":{"start":{"line":7,"column":22},"end":{"line":7,"column":53}},"6":{"start":{"line":10,"column":8},"end":{"line":25,"column":10}},"7":{"start":{"line":11,"column":43},"end":{"line":11,"column":47}},"8":{"start":{"line":12,"column":27},"end":{"line":14,"column":14}},"9":{"start":{"line":15,"column":35},"end":{"line":15,"column":48}},"10":{"start":{"line":16,"column":28},"end":{"line":20,"column":14}},"11":{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},"12":{"start":{"line":22,"column":16},"end":{"line":22,"column":77}},"13":{"start":{"line":24,"column":12},"end":{"line":24,"column":27}},"14":{"start":{"line":26,"column":8},"end":{"line":43,"column":10}},"15":{"start":{"line":27,"column":43},"end":{"line":27,"column":47}},"16":{"start":{"line":28,"column":29},"end":{"line":32,"column":14}},"17":{"start":{"line":33,"column":12},"end":{"line":35,"column":13}},"18":{"start":{"line":34,"column":16},"end":{"line":34,"column":71}},"19":{"start":{"line":36,"column":37},"end":{"line":36,"column":72}},"20":{"start":{"line":37,"column":12},"end":{"line":39,"column":13}},"21":{"start":{"line":38,"column":16},"end":{"line":38,"column":73}},"22":{"start":{"line":40,"column":26},"end":{"line":40,"column":62}},"23":{"start":{"line":41,"column":38},"end":{"line":41,"column":46}},"24":{"start":{"line":42,"column":12},"end":{"line":42,"column":54}},"25":{"start":{"line":44,"column":8},"end":{"line":60,"column":10}},"26":{"start":{"line":45,"column":30},"end":{"line":55,"column":14}},"27":{"start":{"line":56,"column":12},"end":{"line":58,"column":13}},"28":{"start":{"line":57,"column":16},"end":{"line":57,"column":71}},"29":{"start":{"line":59,"column":12},"end":{"line":59,"column":28}},"30":{"start":{"line":63,"column":0},"end":{"line":63,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":18},"end":{"line":61,"column":5}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":24},"end":{"line":10,"column":25}},"loc":{"start":{"line":10,"column":40},"end":{"line":25,"column":9}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":26,"column":21},"end":{"line":26,"column":22}},"loc":{"start":{"line":26,"column":37},"end":{"line":43,"column":9}},"line":26},"3":{"name":"(anonymous_3)","decl":{"start":{"line":44,"column":27},"end":{"line":44,"column":28}},"loc":{"start":{"line":44,"column":47},"end":{"line":60,"column":9}},"line":44}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},"type":"if","locations":[{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},{"start":{"line":21,"column":12},"end":{"line":23,"column":13}}],"line":21},"1":{"loc":{"start":{"line":33,"column":12},"end":{"line":35,"column":13}},"type":"if","locations":[{"start":{"line":33,"column":12},"end":{"line":35,"column":13}},{"start":{"line":33,"column":12},"end":{"line":35,"column":13}}],"line":33},"2":{"loc":{"start":{"line":37,"column":12},"end":{"line":39,"column":13}},"type":"if","locations":[{"start":{"line":37,"column":12},"end":{"line":39,"column":13}},{"start":{"line":37,"column":12},"end":{"line":39,"column":13}}],"line":37},"3":{"loc":{"start":{"line":56,"column":12},"end":{"line":58,"column":13}},"type":"if","locations":[{"start":{"line":56,"column":12},"end":{"line":58,"column":13}},{"start":{"line":56,"column":12},"end":{"line":58,"column":13}}],"line":56}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":2,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":2,"15":4,"16":4,"17":4,"18":1,"19":3,"20":3,"21":1,"22":2,"23":0,"24":0,"25":2,"26":0,"27":0,"28":0,"29":0,"30":1},"f":{"0":2,"1":0,"2":4,"3":0},"b":{"0":[0,0],"1":[1,3],"2":[1,2],"3":[0,0]},"inputSourceMap":{"version":3,"file":"/home/leonancosta/Documentos/Desafio-NG.CASH/backend/src/services/user.service.ts","sources":["/home/leonancosta/Documentos/Desafio-NG.CASH/backend/src/services/user.service.ts"],"names":[],"mappings":";;AAAA,2BAA2B;AAC3B,8DAAiD;AACjD,sEAAwD;AAGxD,uDAAgD;AAChD,sDAA+C;AAE/C,MAAqB,WAAW;IAAhC;QACS,aAAQ,GAAG,KAAK,EAAE,IAAmB,EAAkB,EAAE;YAC9D,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;YACpC,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,wBAAO,CAAC,MAAM,CAAC;gBAClC,OAAO,EAAE,GAAG;aACb,CAAC,CAAC;YACH,MAAM,cAAc,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;YACrC,MAAM,OAAO,GAAG,MAAM,oBAAI,CAAC,MAAM,CAAC;gBAChC,QAAQ;gBACR,QAAQ,EAAE,cAAc;gBACxB,SAAS,EAAE,EAAE;aACd,CAAC,CAAC;YACH,IAAI,CAAC,OAAO,EAAE;gBACZ,MAAM,IAAI,qBAAW,CAAC,GAAG,EAAE,sBAAsB,CAAC,CAAC;aACpD;YACD,OAAO,OAAO,CAAC;QACjB,CAAC,CAAC;QAEK,UAAK,GAAG,KAAK,EAAE,IAAmB,EAAuB,EAAE;YAChE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;YACpC,MAAM,QAAQ,GAAG,MAAM,oBAAI,CAAC,OAAO,CAAC;gBAClC,KAAK,EAAE;oBACL,QAAQ;iBACT;aACF,CAAC,CAAC;YAEH,IAAI,CAAC,QAAQ,EAAE;gBACb,MAAM,IAAI,qBAAW,CAAC,GAAG,EAAE,gBAAgB,CAAC,CAAC;aAC9C;YACD,MAAM,gBAAgB,GAAG,GAAG,CAAC,QAAQ,CAAC,KAAK,QAAQ,CAAC,QAAQ,CAAC;YAC7D,IAAI,CAAC,gBAAgB,EAAE;gBACrB,MAAM,IAAI,qBAAW,CAAC,GAAG,EAAE,kBAAkB,CAAC,CAAC;aAChD;YACD,MAAM,KAAK,GAAG,IAAA,qBAAW,EAAC,QAAQ,CAAC,CAAC;YACpC,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,GAAG,QAAQ,CAAC;YACnC,OAAO,EAAE,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;QAC5C,CAAC,CAAC;QAEK,gBAAW,GAAG,KAAK,EAAE,QAAgB,EAAkB,EAAE;YAC9D,MAAM,QAAQ,GAAG,CAAC,MAAM,oBAAI,CAAC,OAAO,CAAC;gBACnC,KAAK,EAAE;oBACL,QAAQ;iBACT;gBACD,UAAU,EAAE,EAAE,OAAO,EAAE,CAAC,UAAU,CAAC,EAAE;gBACrC,OAAO,EAAE;oBACP,KAAK,EAAE,wBAAO;oBACd,EAAE,EAAE,SAAS;oBACb,UAAU,EAAE,CAAC,SAAS,CAAC;iBACxB;aACF,CAAC,CAAqB,CAAC;YAExB,IAAI,CAAC,QAAQ,EAAE;gBACb,MAAM,IAAI,qBAAW,CAAC,GAAG,EAAE,gBAAgB,CAAC,CAAC;aAC9C;YAED,OAAO,QAAQ,CAAC;QAClB,CAAC,CAAC;IACJ,CAAC;CAAA;AAzDD,8BAyDC","sourcesContent":["import * as md5 from 'md5';\nimport User from '../database/models/user.model';\nimport Account from '../database/models/accounts.model';\nimport { IRegisterUser, IUser } from '../interfaces/user.interface';\nimport { ILoginUser } from '../interfaces/token.interface';\nimport CustomError from '../errors/customError';\nimport createToken from '../utils/createToken';\n\nexport default class UserService {\n  public register = async (user: IRegisterUser): Promise<IUser> => {\n    const { username, password } = user;\n    const { id } = await Account.create({\n      balance: 100,\n    });\n    const hashedPassword = md5(password);\n    const newUser = await User.create({\n      username,\n      password: hashedPassword,\n      accountId: id,\n    });\n    if (!newUser) {\n      throw new CustomError(500, 'Something went wrong');\n    }\n    return newUser;\n  };\n\n  public login = async (user: IRegisterUser): Promise<ILoginUser> => {\n    const { username, password } = user;\n    const userInfo = await User.findOne({\n      where: {\n        username,\n      },\n    });\n\n    if (!userInfo) {\n      throw new CustomError(401, 'User not found');\n    }\n    const validatePassword = md5(password) === userInfo.password;\n    if (!validatePassword) {\n      throw new CustomError(400, 'Invalid password');\n    }\n    const token = createToken(username);\n    const { id, accountId } = userInfo;\n    return { id, username, accountId, token };\n  };\n\n  public getUserInfo = async (username: string): Promise<IUser> => {\n    const userInfo = (await User.findOne({\n      where: {\n        username,\n      },\n      attributes: { exclude: ['password'] },\n      include: {\n        model: Account,\n        as: 'account',\n        attributes: ['balance'],\n      },\n    })) as unknown as IUser;\n\n    if (!userInfo) {\n      throw new CustomError(404, 'User not found');\n    }\n\n    return userInfo;\n  };\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"045184380dc193ec57ac6fdb877b748dd917c8a4"},"/home/leonancosta/Documentos/Desafio-NG.CASH/backend/src/controllers/transactions.controller.ts":{"path":"/home/leonancosta/Documentos/Desafio-NG.CASH/backend/src/controllers/transactions.controller.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":22},"end":{"line":3,"column":54}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":55}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":41}},"4":{"start":{"line":8,"column":8},"end":{"line":24,"column":10}},"5":{"start":{"line":9,"column":12},"end":{"line":23,"column":13}},"6":{"start":{"line":10,"column":46},"end":{"line":10,"column":54}},"7":{"start":{"line":11,"column":31},"end":{"line":11,"column":46}},"8":{"start":{"line":12,"column":16},"end":{"line":14,"column":17}},"9":{"start":{"line":13,"column":20},"end":{"line":13,"column":75}},"10":{"start":{"line":15,"column":36},"end":{"line":15,"column":79}},"11":{"start":{"line":16,"column":39},"end":{"line":16,"column":85}},"12":{"start":{"line":17,"column":16},"end":{"line":17,"column":96}},"13":{"start":{"line":18,"column":36},"end":{"line":18,"column":119}},"14":{"start":{"line":19,"column":16},"end":{"line":19,"column":50}},"15":{"start":{"line":22,"column":16},"end":{"line":22,"column":28}},"16":{"start":{"line":25,"column":8},"end":{"line":35,"column":10}},"17":{"start":{"line":26,"column":12},"end":{"line":34,"column":13}},"18":{"start":{"line":27,"column":29},"end":{"line":27,"column":44}},"19":{"start":{"line":28,"column":34},"end":{"line":28,"column":75}},"20":{"start":{"line":29,"column":37},"end":{"line":29,"column":93}},"21":{"start":{"line":30,"column":16},"end":{"line":30,"column":51}},"22":{"start":{"line":33,"column":16},"end":{"line":33,"column":28}},"23":{"start":{"line":36,"column":8},"end":{"line":48,"column":10}},"24":{"start":{"line":37,"column":12},"end":{"line":47,"column":13}},"25":{"start":{"line":38,"column":29},"end":{"line":38,"column":44}},"26":{"start":{"line":39,"column":29},"end":{"line":39,"column":43}},"27":{"start":{"line":40,"column":31},"end":{"line":40,"column":47}},"28":{"start":{"line":41,"column":34},"end":{"line":41,"column":75}},"29":{"start":{"line":42,"column":37},"end":{"line":42,"column":116}},"30":{"start":{"line":43,"column":16},"end":{"line":43,"column":51}},"31":{"start":{"line":46,"column":16},"end":{"line":46,"column":28}},"32":{"start":{"line":51,"column":0},"end":{"line":51,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":51},"end":{"line":49,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":33},"end":{"line":8,"column":34}},"loc":{"start":{"line":8,"column":59},"end":{"line":24,"column":9}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":25,"column":31},"end":{"line":25,"column":32}},"loc":{"start":{"line":25,"column":57},"end":{"line":35,"column":9}},"line":25},"3":{"name":"(anonymous_3)","decl":{"start":{"line":36,"column":40},"end":{"line":36,"column":41}},"loc":{"start":{"line":36,"column":66},"end":{"line":48,"column":9}},"line":36}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":16},"end":{"line":14,"column":17}},"type":"if","locations":[{"start":{"line":12,"column":16},"end":{"line":14,"column":17}},{"start":{"line":12,"column":16},"end":{"line":14,"column":17}}],"line":12},"1":{"loc":{"start":{"line":12,"column":20},"end":{"line":12,"column":52}},"type":"binary-expr","locations":[{"start":{"line":12,"column":20},"end":{"line":12,"column":30}},{"start":{"line":12,"column":34},"end":{"line":12,"column":41}},{"start":{"line":12,"column":45},"end":{"line":12,"column":52}}],"line":12}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1},"f":{"0":1,"1":0,"2":0,"3":0},"b":{"0":[0,0],"1":[0,0,0]},"inputSourceMap":{"version":3,"file":"/home/leonancosta/Documentos/Desafio-NG.CASH/backend/src/controllers/transactions.controller.ts","sources":["/home/leonancosta/Documentos/Desafio-NG.CASH/backend/src/controllers/transactions.controller.ts"],"names":[],"mappings":";;AAKA,uDAAgD;AAEhD,MAAqB,qBAAqB;IACxC,YACU,mBAAuC,EACvC,YAAyB;QADzB,wBAAmB,GAAnB,mBAAmB,CAAoB;QACvC,iBAAY,GAAZ,YAAY,CAAa;QAG5B,sBAAiB,GAAG,KAAK,EAC9B,GAAY,EACZ,GAAa,EACb,IAAkB,EAClB,EAAE;YACF,IAAI;gBACF,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;gBACvC,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;gBAE/B,IAAI,CAAC,SAAS,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,EAAE;oBACpC,MAAM,IAAI,qBAAW,CAAC,GAAG,EAAE,gBAAgB,CAAC,CAAC;iBAC9C;gBAED,MAAM,UAAU,GAAG,CAAC,MAAM,IAAI,CAAC,YAAY,CAAC,WAAW,CACrD,MAAM,CACP,CAAc,CAAC;gBAEhB,MAAM,aAAa,GAAG,CAAC,MAAM,IAAI,CAAC,YAAY,CAAC,WAAW,CACxD,SAAS,CACV,CAAc,CAAC;gBAEhB,MAAM,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAC1C,UAAU,EACV,aAAa,EACb,MAAM,CACP,CAAC;gBAEF,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAClE,UAAU,EACV,aAAa,EACb,MAAM,CACP,CAAC;gBACF,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACnC;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,KAAK,CAAC,CAAC;aACb;QACH,CAAC,CAAC;QAEK,oBAAe,GAAG,KAAK,EAC5B,GAAY,EACZ,GAAa,EACb,IAAkB,EAClB,EAAE;YACF,IAAI;gBACF,MAAM,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,IAAc,CAAC;gBACvC,MAAM,QAAQ,GAAG,CAAC,MAAM,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,CAAc,CAAC;gBAC1E,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,eAAe,CACjE,QAAQ,CACT,CAAC;gBACF,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aACpC;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,KAAK,CAAC,CAAC;aACb;QACH,CAAC,CAAC;QAEK,6BAAwB,GAAG,KAAK,EACrC,GAAY,EACZ,GAAa,EACb,IAAkB,EAClB,EAAE;YACF,IAAI;gBACF,MAAM,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,IAAc,CAAC;gBACvC,MAAM,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,IAAc,CAAC;gBACtC,MAAM,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,MAAgB,CAAC;gBAE1C,MAAM,QAAQ,GAAG,CAAC,MAAM,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,CAAc,CAAC;gBAC1E,MAAM,YAAY,GAChB,MAAM,IAAI,CAAC,mBAAmB,CAAC,wBAAwB,CACrD,QAAQ,EACR,IAAI,EACJ,MAAM,CACP,CAAC;gBACJ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aACpC;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,KAAK,CAAC,CAAC;aACb;QACH,CAAC,CAAC;IA9EC,CAAC;CA+EL;AAnFD,wCAmFC","sourcesContent":["import { Request, Response, NextFunction } from 'express';\nimport moment = require('moment');\nimport TransactionService from '../services/transactions.service';\nimport UserService from '../services/user.service';\nimport { IUserInfo } from '../interfaces/user.interface';\nimport CustomError from '../errors/customError';\n\nexport default class TransactionController {\n  constructor(\n    private _transactionService: TransactionService,\n    private _userService: UserService\n  ) {}\n\n  public createTransaction = async (\n    req: Request,\n    res: Response,\n    next: NextFunction\n  ) => {\n    try {\n      const { recipient, amount } = req.body;\n      const sender = res.locals.user;\n\n      if (!recipient || !amount || !sender) {\n        throw new CustomError(400, 'Missing fields');\n      }\n\n      const senderInfo = (await this._userService.getUserInfo(\n        sender\n      )) as IUserInfo;\n\n      const recipientInfo = (await this._userService.getUserInfo(\n        recipient\n      )) as IUserInfo;\n\n      await this._transactionService.updateBalance(\n        senderInfo,\n        recipientInfo,\n        amount\n      );\n\n      const transaction = await this._transactionService.createTransaction(\n        senderInfo,\n        recipientInfo,\n        amount\n      );\n      res.status(200).json(transaction);\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public getTransactions = async (\n    req: Request,\n    res: Response,\n    next: NextFunction\n  ) => {\n    try {\n      const user = res.locals.user as string;\n      const userInfo = (await this._userService.getUserInfo(user)) as IUserInfo;\n      const transactions = await this._transactionService.getTransactions(\n        userInfo\n      );\n      res.status(200).json(transactions);\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public filterTransactionsByDate = async (\n    req: Request,\n    res: Response,\n    next: NextFunction\n  ) => {\n    try {\n      const user = res.locals.user as string;\n      const date = req.query.date as string;\n      const filter = req.query.filter as string;\n\n      const userInfo = (await this._userService.getUserInfo(user)) as IUserInfo;\n      const transactions =\n        await this._transactionService.filterTransactionsByDate(\n          userInfo,\n          date,\n          filter\n        );\n      res.status(200).json(transactions);\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"34763d3a15c5f6c460440b5adf2b76cb7240a73b"},"/home/leonancosta/Documentos/Desafio-NG.CASH/backend/src/services/transactions.service.ts":{"path":"/home/leonancosta/Documentos/Desafio-NG.CASH/backend/src/services/transactions.service.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":15},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":29},"end":{"line":5,"column":77}},"4":{"start":{"line":6,"column":25},"end":{"line":6,"column":69}},"5":{"start":{"line":7,"column":21},"end":{"line":7,"column":61}},"6":{"start":{"line":10,"column":8},"end":{"line":13,"column":10}},"7":{"start":{"line":11,"column":12},"end":{"line":11,"column":141}},"8":{"start":{"line":12,"column":12},"end":{"line":12,"column":147}},"9":{"start":{"line":14,"column":8},"end":{"line":22,"column":10}},"10":{"start":{"line":15,"column":32},"end":{"line":20,"column":14}},"11":{"start":{"line":21,"column":12},"end":{"line":21,"column":31}},"12":{"start":{"line":23,"column":8},"end":{"line":59,"column":10}},"13":{"start":{"line":24,"column":33},"end":{"line":57,"column":14}},"14":{"start":{"line":58,"column":12},"end":{"line":58,"column":32}},"15":{"start":{"line":60,"column":8},"end":{"line":78,"column":10}},"16":{"start":{"line":61,"column":33},"end":{"line":61,"column":69}},"17":{"start":{"line":62,"column":12},"end":{"line":77,"column":13}},"18":{"start":{"line":64,"column":20},"end":{"line":65,"column":94}},"19":{"start":{"line":64,"column":64},"end":{"line":65,"column":92}},"20":{"start":{"line":67,"column":20},"end":{"line":68,"column":93}},"21":{"start":{"line":67,"column":64},"end":{"line":68,"column":91}},"22":{"start":{"line":70,"column":20},"end":{"line":70,"column":134}},"23":{"start":{"line":70,"column":64},"end":{"line":70,"column":132}},"24":{"start":{"line":72,"column":20},"end":{"line":72,"column":133}},"25":{"start":{"line":72,"column":64},"end":{"line":72,"column":131}},"26":{"start":{"line":74,"column":20},"end":{"line":74,"column":125}},"27":{"start":{"line":74,"column":64},"end":{"line":74,"column":123}},"28":{"start":{"line":76,"column":20},"end":{"line":76,"column":40}},"29":{"start":{"line":81,"column":0},"end":{"line":81,"column":37}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":18},"end":{"line":79,"column":5}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":29},"end":{"line":10,"column":30}},"loc":{"start":{"line":10,"column":74},"end":{"line":13,"column":9}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":33},"end":{"line":14,"column":34}},"loc":{"start":{"line":14,"column":78},"end":{"line":22,"column":9}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":23,"column":31},"end":{"line":23,"column":32}},"loc":{"start":{"line":23,"column":47},"end":{"line":59,"column":9}},"line":23},"4":{"name":"(anonymous_4)","decl":{"start":{"line":60,"column":40},"end":{"line":60,"column":41}},"loc":{"start":{"line":60,"column":74},"end":{"line":78,"column":9}},"line":60},"5":{"name":"(anonymous_5)","decl":{"start":{"line":64,"column":47},"end":{"line":64,"column":48}},"loc":{"start":{"line":64,"column":64},"end":{"line":65,"column":92}},"line":64},"6":{"name":"(anonymous_6)","decl":{"start":{"line":67,"column":47},"end":{"line":67,"column":48}},"loc":{"start":{"line":67,"column":64},"end":{"line":68,"column":91}},"line":67},"7":{"name":"(anonymous_7)","decl":{"start":{"line":70,"column":47},"end":{"line":70,"column":48}},"loc":{"start":{"line":70,"column":64},"end":{"line":70,"column":132}},"line":70},"8":{"name":"(anonymous_8)","decl":{"start":{"line":72,"column":47},"end":{"line":72,"column":48}},"loc":{"start":{"line":72,"column":64},"end":{"line":72,"column":131}},"line":72},"9":{"name":"(anonymous_9)","decl":{"start":{"line":74,"column":47},"end":{"line":74,"column":48}},"loc":{"start":{"line":74,"column":64},"end":{"line":74,"column":123}},"line":74}},"branchMap":{"0":{"loc":{"start":{"line":62,"column":12},"end":{"line":77,"column":13}},"type":"switch","locations":[{"start":{"line":63,"column":16},"end":{"line":65,"column":94}},{"start":{"line":66,"column":16},"end":{"line":68,"column":93}},{"start":{"line":69,"column":16},"end":{"line":70,"column":134}},{"start":{"line":71,"column":16},"end":{"line":72,"column":133}},{"start":{"line":73,"column":16},"end":{"line":74,"column":125}},{"start":{"line":75,"column":16},"end":{"line":76,"column":40}}],"line":62},"1":{"loc":{"start":{"line":64,"column":64},"end":{"line":65,"column":92}},"type":"binary-expr","locations":[{"start":{"line":64,"column":64},"end":{"line":64,"column":123}},{"start":{"line":65,"column":24},"end":{"line":65,"column":92}}],"line":64},"2":{"loc":{"start":{"line":67,"column":64},"end":{"line":68,"column":91}},"type":"binary-expr","locations":[{"start":{"line":67,"column":64},"end":{"line":67,"column":123}},{"start":{"line":68,"column":24},"end":{"line":68,"column":91}}],"line":67}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":1,"10":0,"11":0,"12":1,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"0":[0,0,0,0,0,0],"1":[0,0],"2":[0,0]},"inputSourceMap":{"version":3,"file":"/home/leonancosta/Documentos/Desafio-NG.CASH/backend/src/services/transactions.service.ts","sources":["/home/leonancosta/Documentos/Desafio-NG.CASH/backend/src/services/transactions.service.ts"],"names":[],"mappings":"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","sourcesContent":["const { Op } = require('sequelize');\nimport moment = require('moment');\nimport Transaction from '../database/models/transactions.model';\nimport Account from '../database/models/accounts.model';\nimport User from '../database/models/user.model';\nimport { IUserInfo } from '../interfaces/user.interface';\nimport {\n  ITransaction,\n  ITransactionInfo,\n} from '../interfaces/transactions.interface';\n\nexport default class TransactionService {\n  public updateBalance = async (\n    senderInfo: IUserInfo,\n    recipientInfo: IUserInfo,\n    amount: number\n  ): Promise<void> => {\n    await Account.update(\n      { balance: senderInfo.account.balance - amount },\n      { where: { id: senderInfo.accountId } }\n    );\n\n    await Account.update(\n      { balance: recipientInfo.account.balance + amount },\n      { where: { id: recipientInfo.accountId } }\n    );\n  };\n\n  public createTransaction = async (\n    senderInfo: IUserInfo,\n    recipientInfo: IUserInfo,\n    amount: number\n  ): Promise<ITransaction> => {\n    const transaction = await Transaction.create({\n      debitedAccountId: senderInfo.id,\n      creditedAccountId: recipientInfo.id,\n      value: amount,\n      createdAt: new Date(),\n    });\n\n    return transaction;\n  };\n\n  public getTransactions = async (\n    user: IUserInfo\n  ): Promise<ITransactionInfo[]> => {\n    const transactions = await Transaction.findAll({\n      where: {\n        [Op.or]: [\n          { debitedAccountId: user.accountId },\n          { creditedAccountId: user.accountId },\n        ],\n      },\n      include: [\n        {\n          model: Account,\n          include: [\n            {\n              model: User,\n              as: 'userAccount',\n              attributes: ['id', 'username'],\n            },\n          ],\n          as: 'debitedAccount',\n          attributes: ['id'],\n        },\n        {\n          model: Account,\n          include: [\n            {\n              model: User,\n              as: 'userAccount',\n              attributes: ['id', 'username'],\n            },\n          ],\n          as: 'creditedAccount',\n          attributes: ['id'],\n        },\n      ],\n    });\n\n    return transactions as unknown as ITransactionInfo[];\n  };\n\n  public filterTransactionsByDate = async (\n    userInfo: IUserInfo,\n    date: string,\n    filter: string\n  ): Promise<ITransactionInfo[]> => {\n    const transactions = await this.getTransactions(userInfo);\n\n    switch (filter) {\n      case 'date and cash-in':\n        return transactions.filter(\n          (transaction) =>\n            moment(transaction.createdAt).format('YYYY-MM-DD') === date &&\n            Number(transaction.creditedAccountId) === Number(userInfo.accountId)\n        );\n      case 'date and cash-out':\n        return transactions.filter(\n          (transaction) =>\n            moment(transaction.createdAt).format('YYYY-MM-DD') === date &&\n            Number(transaction.debitedAccountId) === Number(userInfo.accountId)\n        );\n\n      case 'cash-in':\n        return transactions.filter(\n          (transaction) =>\n            Number(transaction.creditedAccountId) === Number(userInfo.accountId)\n        );\n\n      case 'cash-out':\n        return transactions.filter(\n          (transaction) =>\n            Number(transaction.debitedAccountId) === Number(userInfo.accountId)\n        );\n\n      case 'date':\n        return transactions.filter(\n          (transaction) =>\n            moment(transaction.createdAt).format('YYYY-MM-DD') === date\n        );\n      default:\n        return transactions;\n    }\n  };\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a7811d7005735608fb7a4b5455c1e927e231ef9e"}}